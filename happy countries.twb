<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook original-version='10.5' source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2017-csv' inline='true' name='federated.0hcwcnz14i39qd1a2lvtf1t6a5ob' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2017-csv' name='textscan.11t3zd50f18h7712b8uq20d61m07'>
            <connection class='textscan' directory='C:/Users/yashk/Downloads' filename='2017-csv.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.11t3zd50f18h7712b8uq20d61m07' name='2017-csv.csv' table='[2017-csv#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='Happiness.Rank' ordinal='1' />
            <column datatype='real' name='Health (Life Expectancy)' ordinal='2' />
            <column datatype='real' name='Freedom' ordinal='3' />
            <column datatype='real' name='Generosity' ordinal='4' />
            <column datatype='real' name='Government Corruption' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness.Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Happiness.Rank]</local-name>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias>Happiness.Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health (Life Expectancy)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health (Life Expectancy)]</local-name>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias>Health (Life Expectancy)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Corruption]</local-name>
            <parent-name>[2017-csv.csv]</parent-name>
            <remote-alias>Government Corruption</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Government Corruption]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Happiness.Rank]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Government Corruption]' derivation='Sum' name='[sum:Government Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness.Rank]' derivation='Sum' name='[sum:Happiness.Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.346473' measure-ordering='alphabetic' measure-percentage='0.653527' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Health (Life Expectancy):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Happiness.Rank:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Government Corruption:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Generosity:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>What makes a Country </run>
            <run bold='true'>happy</run>
            <run>?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2017-csv' name='federated.0hcwcnz14i39qd1a2lvtf1t6a5ob' />
          </datasources>
          <datasource-dependencies datasource='federated.0hcwcnz14i39qd1a2lvtf1t6a5ob'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government Corruption]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Happiness.Rank]' role='measure' type='quantitative' />
            <column datatype='real' name='[Health (Life Expectancy)]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Corruption]' derivation='Sum' name='[sum:Government Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness.Rank]' derivation='Sum' name='[sum:Happiness.Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health (Life Expectancy)]' derivation='Sum' name='[sum:Health (Life Expectancy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Government Corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Health (Life Expectancy):qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[none:Country:nk]' direction='ASC' using='[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[sum:Happiness.Rank:qk]' />
          <slices>
            <column>[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[Multiple Values]</rows>
        <cols>([federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[none:Country:nk] / [federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[:Measure Names])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[:Measure Names]</field>
            <field>[federated.0hcwcnz14i39qd1a2lvtf1t6a5ob].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
